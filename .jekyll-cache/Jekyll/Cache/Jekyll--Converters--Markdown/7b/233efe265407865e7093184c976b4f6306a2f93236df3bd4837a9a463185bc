I"A;<h1 id="vim操作">Vim操作</h1>

<h2 id="命令格式">命令格式</h2>

<p>vim的命令采用下面的格式。</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>[OPERATOR][NUMBER][MOTION]
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Operator是动词。</p>

<ul>
  <li>d – Delete (等同于cut命令)</li>
  <li>c – Change</li>
  <li>y – Yank</li>
  <li>p – Insert last deleted text after cursor (put command)</li>
  <li>r – Replace</li>
  <li>v - 可视化选择</li>
</ul>

<p>Motion表示操作的上下文。</p>

<ul>
  <li>w – 直到下一个单词的起始位置前面。</li>
  <li>s - sentence</li>
  <li>p - paragraph</li>
  <li>t - tag</li>
  <li>b - block</li>
  <li>e – 直到当前单词的最后一个位置。</li>
  <li>$ – 直到当前行的最后一个位置。</li>
  <li>) – 下一个句子的开始。</li>
  <li>( – 当前句子的开始。</li>
  <li>} – 下一段的开始。</li>
  <li>{ – 当前段的开始。</li>
  <li>] – 下一段部分（section）的开始</li>
  <li><code class="highlighter-rouge">[</code> – 当前部分（section）的开始</li>
  <li><code class="highlighter-rouge">H</code> – 当前屏幕的顶部行</li>
  <li><code class="highlighter-rouge">L</code> – 当前屏幕的最后一行</li>
</ul>

<p>Count是可选的，表示command和motion的重复次数。</p>

<ul>
  <li>i - inside</li>
  <li>a - around</li>
  <li>NUM: number (e.g.: 1, 2, 10)</li>
</ul>

<p>实例</p>

<ul>
  <li>dw 删除一个词</li>
  <li>d4w 删除四个词</li>
  <li>d$ 删除当前行</li>
  <li>dd 删除当前行（d$的快捷方式）</li>
  <li>d2$ 删除两行</li>
  <li>cis - Change inside sentence，删除当前句子，并进入insert模式</li>
  <li>yip - yank inside paragrah 复制当前段落</li>
</ul>

<h2 id="撤销命令">撤销命令</h2>

<ul>
  <li>u 撤销上个命令</li>
</ul>

<h2 id="移动光标">移动光标</h2>

<ul>
  <li>h – Left</li>
  <li>k – Up</li>
  <li>l – Right</li>
  <li>j – Down</li>
  <li>G 移动到文件最后一行</li>
  <li>123 + G 跳到指定行</li>
  <li>gg 移动到文件第一行</li>
  <li>ctrl + g 查看当前文件总行数</li>
  <li>% 移动到当前代码区块的开始/结尾（匹配<code class="highlighter-rouge">()</code>，<code class="highlighter-rouge">[]</code>，<code class="highlighter-rouge">{}</code>）</li>
</ul>

<h2 id="插入文字">插入文字</h2>

<ul>
  <li>i 当前位置前面</li>
  <li>a 当前位置后面</li>
  <li>o 当前行下方新增一行</li>
  <li>O 当前行上方新增一行</li>
</ul>

<h2 id="删除">删除</h2>

<ul>
  <li>x 删除当前字符</li>
</ul>

<h2 id="搜索替换">搜索，替换</h2>

<ul>
  <li>:/cat 搜索光标位置后面</li>
  <li>:?dogs 搜索光标位置前面</li>
  <li>n 移动到下一个匹配</li>
  <li>N 移动到上一个匹配</li>
  <li>:s/cat/dog 只替换下一个</li>
  <li>:s/cat/dog/g 替换所有</li>
</ul>

<h2 id="执行shell命令">执行shell命令</h2>

<ul>
  <li>:!ls -al</li>
</ul>

<h2 id="复制粘贴剪切">复制，粘贴，剪切</h2>

<h3 id="选择文本">选择文本</h3>

<ul>
  <li>v+光标移动 （按字符选择）高亮选中所要的文本，然后进行各种操作（比如，d表示删除）。</li>
  <li>V （按行选择）</li>
  <li>v+选中的内容+c 更改选中的文字</li>
</ul>

<h3 id="复制yank">复制：y(ank)</h3>

<ul>
  <li>y 用v命令选中文本后，用y进行复制</li>
  <li>yy 复制当前行，然后用p进行复制</li>
  <li>5yy 复制从当前行开始的5行</li>
  <li>y_ 等同于yy</li>
  <li>Y 等同于yy</li>
  <li>yw 复制当前单词</li>
  <li>y$ 从当前位置复制到行尾</li>
  <li>y0 从当前位置复制到行首</li>
  <li>y^ 从当前位置复制到第一个非空白字符</li>
  <li>yG 从当前行复制到文件结束</li>
  <li>y20G 从当前行复制到第20行</li>
  <li>y?bar 复制至上一个出现bar的位置</li>
</ul>

<h3 id="粘贴">粘贴</h3>

<ul>
  <li>p 在光标位置之后粘贴</li>
  <li>P 在光标位置之前粘贴</li>
</ul>

<h3 id="剪切">剪切</h3>

<ul>
  <li>v + 选中的内容 + d 剪切</li>
</ul>

<h3 id="剪贴板">剪贴板</h3>

<p>（1） 简单复制和粘贴</p>

<p>vim提供12个剪贴板，它们的名字分别为vim有11个粘贴板，分别是<code class="highlighter-rouge">0</code>、<code class="highlighter-rouge">1</code>、<code class="highlighter-rouge">2</code>、<code class="highlighter-rouge">...</code>、<code class="highlighter-rouge">9</code>、<code class="highlighter-rouge">a</code>、<code class="highlighter-rouge">“</code>。如果开启了系统剪贴板，则会另外多出两个：<code class="highlighter-rouge">+</code>和<code class="highlighter-rouge">*</code>。使用<code class="highlighter-rouge">:reg</code>命令，可以查看各个粘贴板里的内容。</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>:reg
</pre></td></tr></tbody></table></code></pre></div></div>

<p>在vim中简单用y只是复制到<code class="highlighter-rouge">“</code>（双引号)粘贴板里，同样用p粘贴的也是这个粘贴板里的内容。</p>

<p>（2）复制和粘贴到指定剪贴板</p>

<p>要将vim的内容复制到某个粘贴板，需要退出编辑模式，进入正常模式后，选择要复制的内容，然后按”Ny完成复制，其中N为粘贴板号（注意是按一下双引号然后按粘贴板号最后按y），例如要把内容复制到粘贴板a，选中内容后按”ay就可以了。</p>

<p>要将vim某个粘贴板里的内容粘贴进来，需要退出编辑模式，在正常模式按”Np，其中N为粘贴板号。比如，可以按”5p将5号粘贴板里的内容粘贴进来，也可以按”+p将系统全局粘贴板里的内容粘贴进来。</p>

<p>（3）系统剪贴板</p>

<p>Vim支持系统剪贴板，需要打开clipboard功能。使用下面的命令，检查当前版本的Vim，是否支持clipboard。</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nv">$ </span>vim <span class="nt">--version</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>如果不支持的话，需要安装图形化界面的vim（即gvim），或者重新编译vim。</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">sudo </span>apt-get <span class="nb">install </span>gvim
正在读取软件包列表... 完成
正在分析软件包的依赖关系树
正在读取状态信息... 完成
Package gvim is a virtual package provided by:
  vim-gtk 2:7.4.488-7
  vim-gnome 2:7.4.488-7
  vim-athena 2:7.4.488-7
You should explicitly <span class="k">select </span>one to install.

E: Package <span class="s1">'gvim'</span> has no installation candidate

<span class="nv">$ </span><span class="nb">sudo </span>apt-get <span class="nb">install </span>vim-gnome
</pre></td></tr></tbody></table></code></pre></div></div>

<p>另一种方法，是安装vim-gui-common。</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">sudo </span>apt-get <span class="nb">install </span>vim-gui-common
</pre></td></tr></tbody></table></code></pre></div></div>

<p>安装以后，可以用命令行界面，启动gvim，这时可用系统剪贴板。</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nv">$ </span>gvim <span class="nt">-v</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>星号（<code class="highlighter-rouge">*</code>）和加号（<code class="highlighter-rouge">+</code>）粘贴板是系统粘贴板。在windows系统下， * 和 + 剪贴板是相同的。对于 X11 系统， * 剪贴板存放选中或者高亮的内容， + 剪贴板存放复制或剪贴的内容。打开clipboard选项，可以访问 + 剪贴板；打开xterm_clipboard，可以访问 * 剪贴板。 * 剪贴板的一个作用是，在vim的一个窗口选中的内容，可以在vim的另一个窗口取出。</p>

<p>复制到系统剪贴板</p>
<ul>
  <li><code class="highlighter-rouge">"*y</code></li>
  <li><code class="highlighter-rouge">"+y</code></li>
  <li><code class="highlighter-rouge">"+2yy</code> – 复制两行</li>
  <li><code class="highlighter-rouge">{Visual}"+y</code> - copy the selected text into the system clipboard</li>
  <li><code class="highlighter-rouge">"+y{motion}</code> - copy the text specified by {motion} into the system clipboard</li>
  <li><code class="highlighter-rouge">:[range]yank +</code> - copy the text specified by <code class="highlighter-rouge">[range]</code> into the system clipboard</li>
</ul>

<p>剪切到系统剪贴板</p>
<ul>
  <li><code class="highlighter-rouge">"+dd</code> – 剪切一行</li>
</ul>

<p>从系统剪贴板粘贴到vim</p>
<ul>
  <li><code class="highlighter-rouge">"*p</code></li>
  <li><code class="highlighter-rouge">"+p</code></li>
  <li><code class="highlighter-rouge">Shift+Insert</code></li>
  <li><code class="highlighter-rouge">:put +</code> - Ex command puts contents of system clipboard on a new line</li>
  <li><code class="highlighter-rouge">&lt;C-r&gt;</code>+ - From insert mode (or commandline mode)</li>
</ul>

<p><code class="highlighter-rouge">"+p</code>比 Ctrl-v 命令更好，它可以更快更可靠地处理大块文本的粘贴，也能够避免粘贴大量文本时，发生每行行首的自动缩进累积，因为<code class="highlighter-rouge">Ctrl-v</code>是通过系统缓存的stream处理，一行一行地处理粘贴的文本。</p>

<h2 id="多窗口">多窗口</h2>

<p>垂直切分窗口，Ctrl-w + s 或者使用下面的命令。</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>:split &lt;文件名&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<p>水平切分窗口，Ctrl-w + v 或者使用下面的命令。</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>:vsplit &lt;文件名&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<p>如果省略文件名，则打开的是当前文件。</p>

<p>切换窗口的命令。</p>

<ul>
  <li>Ctrl-w +  Ctrl-w</li>
  <li>Ctrl-w + direction key</li>
</ul>

<h2 id="vimrc文件配置">vimrc文件配置</h2>

<p>打开语法高亮</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>:syntax on
</pre></td></tr></tbody></table></code></pre></div></div>

<p>禁止使用箭头键。</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre>nnoremap &lt;Left&gt; :echoe <span class="s2">"Use h"</span>&lt;CR&gt;
nnoremap &lt;Right&gt; :echoe <span class="s2">"Use l"</span>&lt;CR&gt;
nnoremap &lt;Up&gt; :echoe <span class="s2">"Use k"</span>&lt;CR&gt;
nnoremap &lt;Down&gt; :echoe <span class="s2">"Use j"</span>&lt;CR&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<p>在窗口间移动。</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre>nnoremap &lt;c-j&gt; &lt;c-w&gt;j
nnoremap &lt;c-k&gt; &lt;c-w&gt;k
nnoremap &lt;c-h&gt; &lt;c-w&gt;h
nnoremap &lt;c-l&gt; &lt;c-w&gt;l
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="命令行模式">命令行模式</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre><span class="c"># 列出所有buffer</span>
:ls

<span class="c"># 列出所有buffer（包括不可见buffer）</span>
:ls!

<span class="c"># 在当前窗口打开一个新的文件，</span>
<span class="c"># 新建一个buffer，原有文件成为不可见buffer</span>
:e file1

<span class="c"># 新建一个未命名的buffer，然后将其存为 /tmp/foo</span>
:enew
:w /tmp/foo
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="插件">插件</h2>

<ul>
  <li><a href="https://github.com/plasticboy/vim-markdown">Markdown语法高亮</a></li>
</ul>

<h3 id="dmw多窗口管理">dmw多窗口管理</h3>

<p>网址：http://www.vim.org/scripts/script.php?script_id=4186</p>

<p>窗口按下面方式组织。</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre>================= 
|      |     S1 | 
|      |==========
|  M   |     S2 | 
|      |========== 
|      |     S3 | 
================= 
</pre></td></tr></tbody></table></code></pre></div></div>

<p>操作</p>
<ul>
  <li>CTRL-N 在[M]区域创建一个新窗口，将以前的窗口都堆在[S]区域</li>
  <li>CTRL-C 关闭当前窗口</li>
  <li>CTRL-J 跳到下一个窗口（顺时针方向）</li>
  <li>CTRL-K 跳到前一个窗口（逆时针方向）</li>
  <li>CTRL-F 将当前窗口放入[M]区域，并将其他窗口放在[S]区域</li>
</ul>

<h2 id="提示行操作">提示行操作</h2>

<ul>
  <li>:w: write your changes to the file</li>
  <li>:q!: get out of vim (quit), but without saving your changes (!)</li>
  <li>:wq: write your changes and exit vim</li>
  <li>:saveas ~/some/path/: save your file to that locationvim</li>
  <li>ZZ: a faster way to do :wq</li>
</ul>
:ET