I"L<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>graph TB
A(CompletionService&lt;V&gt;)--&gt;B(ExecutorCompletionService)
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="/img/in-post/java-concurrent/CompletionService.png" alt="image" /></p>

<h3 id="completionservice">CompletionService<V></V></h3>

<p>可自行实现该接口.这是一个任务队列.</p>

<p>取出队列元素的poll和take方法</p>

<p>take会阻塞知道队列出现结果</p>

<p>poll使用的前提是确保队列已经有结果,不然贸贸然使用会出现空指针.可以指定一个超时等待时间,避免长时间卡死.</p>

<h3 id="executorcompletionservice">ExecutorCompletionService</h3>

<p>一般都是声明<code class="highlighter-rouge">CompletionService&lt;V&gt;</code>,实例化ExecutorCompletionService</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="rouge-code"><pre>    <span class="kt">int</span> <span class="no">TOTAL_TASK</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">InterruptedException</span><span class="o">,</span> <span class="nc">ExecutionException</span> <span class="o">{</span>
        <span class="c1">// 创建线程池</span>
        <span class="nc">ExecutorService</span> <span class="n">pool</span> <span class="o">=</span> <span class="nc">Executors</span><span class="o">.</span><span class="na">newFixedThreadPool</span><span class="o">(</span><span class="no">TOTAL_TASK</span><span class="o">);</span>
        <span class="nc">CompletionService</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">cService</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ExecutorCompletionService</span><span class="o">&lt;&gt;(</span><span class="n">pool</span><span class="o">);</span>

        <span class="c1">// 向里面扔任务</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="no">TOTAL_TASK</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">cService</span><span class="o">.</span><span class="na">submit</span><span class="o">(</span><span class="k">new</span> <span class="nc">CallableExample</span><span class="o">());</span>
            <span class="c1">//重载的这个submit(Runnable task, V result)方法,是自行把结果传入</span>
        <span class="o">}</span>
        <span class="c1">// 检查线程池任务执行结果</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="no">TOTAL_TASK</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="nc">Future</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">future</span> <span class="o">=</span> <span class="n">cService</span><span class="o">.</span><span class="na">take</span><span class="o">();</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"method:"</span> <span class="o">+</span> <span class="n">future</span><span class="o">.</span><span class="na">get</span><span class="o">());</span>
        <span class="o">}</span>
        <span class="c1">// 关闭线程池</span>
        <span class="n">pool</span><span class="o">.</span><span class="na">shutdown</span><span class="o">();</span>
    <span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><a href="https://examples.javacodegeeks.com/core-java/util/concurrent/completionservice/java-completionservice-example/">其他例子</a></p>
:ET