I"g
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>这方面的资料不胜枚举,此文仅供本人备忘用.
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre>
    <span class="kd">static</span> <span class="nc">String</span> <span class="nf">a</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="s">"a"</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">RuntimeException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="s">"d"</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="s">"b"</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
            <span class="k">return</span> <span class="s">"c"</span><span class="o">;</span>
        <span class="o">}</span>
<span class="c1">//        return "d";</span>
    <span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>这段代码最终返回值是”c”.因为 finally 总是会执行.那这就跟 C#有点不一样了.所以记住,finally 一般是做一些资源的清理,不要在这里面返回值.</p>

<p>参考链接:</p>
<ol>
  <li><a href="https://blog.csdn.net/xialei199023/article/details/63251277">重新认识Java语言——异常（Exception）</a></li>
  <li><a href="https://blog.csdn.net/hguisu/article/details/6155636">深入理解java异常处理机制</a></li>
  <li><a href="https://www.ibm.com/developerworks/cn/java/j-lo-exception/index.html">Java 异常处理及其应用</a></li>
  <li><a href="https://www.ibm.com/developerworks/cn/java/j-lo-exception-misdirection/">Java 异常处理的误区和经验总结</a></li>
  <li><a href=""></a></li>
</ol>
:ET