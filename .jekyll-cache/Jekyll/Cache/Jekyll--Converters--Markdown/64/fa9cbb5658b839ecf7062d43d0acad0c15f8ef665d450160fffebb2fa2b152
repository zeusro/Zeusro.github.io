I"(	<h2 id="不用helm的原因">不用helm的原因</h2>

<p><a href="https://medium.com/virtuslab/think-twice-before-using-helm-25fbb18bc822">这篇文章</a> 介绍得比较详细</p>

<p>helm2 像个巨婴。我个人无法喜欢。</p>

<p>我比较喜欢kustomize这种无侵入，轻量级的生成模式。</p>

<p>(后记:用了Helm3 一段时候后,发现helm3 基本能满足需求,而且helm 3 取消了服务端)</p>

<h2 id="基本概念">基本概念</h2>

<p>base：含有一个kustomization.yaml文件的目录，可以被其他的kustomization.yaml来引用
resource：文件路径，指向一个声明了kubernetes API对象的YAML文件</p>

<p>patch: 文件路径，指向一个声明了kubernetes API patch的YAML文件</p>

<p>variant: 含有同一组bases的不同kustomization</p>

<p><a href="https://github.com/kubernetes-sigs/kustomize/blob/master/docs/glossary.md">术语</a></p>

<h2 id="准备工作">准备工作</h2>

<ol>
  <li>升级kubectl到1.14版本</li>
  <li><a href="https://github.com/kubernetes-sigs/kustomize/releases">下载</a>安装kustomize，并添加到$path</li>
</ol>

<h2 id="基本目录结构">基本目录结构</h2>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre>├── base
│   ├── deployment.yaml
│   ├── kustomization.yaml
│   └── service.yaml
└── overlays
    ├── dev
    │   ├── kustomization.yaml
    │   └── patch.yaml
    ├── prod
    │   ├── kustomization.yaml
    │   └── patch.yaml
    └── staging
        ├── kustomization.yaml
        └── patch.yaml
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="实际运用">实际运用</h2>

<p><a href="https://github.com/zeusro/kustomize-example">我写的例子</a></p>

<h2 id="参考链接">参考链接：</h2>

<ol>
  <li>https://zhuanlan.zhihu.com/p/38424955</li>
  <li>https://aisensiy.github.io/2018/11/27/helm-and-kustomize/</li>
  <li>https://yq.aliyun.com/articles/699126?spm=a2c4e.11163080.searchblog.38.273b2ec1q8XHEg</li>
  <li>https://kubernetes.io/docs/tasks/manage-kubernetes-objects/kustomization/</li>
</ol>
:ET