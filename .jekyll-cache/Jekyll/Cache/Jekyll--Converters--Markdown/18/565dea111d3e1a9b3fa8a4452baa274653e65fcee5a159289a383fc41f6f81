I"6<h2 id="基本查询">基本查询</h2>

<p>ES,默认并发限制1000,如果前面的查询卡住或者瞬时请求过多,就会出现异常.</p>

<h3 id="创建">创建</h3>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre>POST /a/_doc/2
{"content":"公安部：各地校车将享最高路权"}
POST /a/_doc/1
{"content":"男人老狗穿什么连衣裙"}

</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="查询">查询</h3>

<ul>
  <li>返回文档的一部分</li>
</ul>

<p>?_source=title,text</p>

<h3 id="get">get</h3>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>get /a/text/1
get /a/text/2
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="更新">更新</h3>

<ul>
  <li>部分更新</li>
</ul>

<p>/_update</p>

<ul>
  <li>取回多个文档</li>
</ul>

<p>/_mget</p>

<ul>
  <li>分析</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre>GET _analyze
{
  "analyzer" : "standard",
  "text" : "this is a test"
}
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="分片">分片</h2>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre>PUT test
{
    "settings" : {
        "number_of_shards" : 1
    },
    "mappings" : {
        "properties" : {
            "field1" : { "type" : "text" }
        }
    }
}
GET /kimchy,elasticsearch/_search?q=tag:wow
GET /_all/_search?q=tag:wow

</pre></td></tr></tbody></table></code></pre></div></div>

<p>GET _cat/indices</p>

<h2 id="系统查询">系统查询</h2>

<ul>
  <li>健康检查</li>
</ul>

<p>GET /_cluster/health</p>

<h2 id="基于插件的查询">基于插件的查询</h2>

<h3 id="elasticsearch-analysis-ik"><a href="https://github.com/medcl/elasticsearch-analysis-ik">elasticsearch-analysis-ik</a></h3>

<p>使用该插件,要注意<strong>mappings要在创建index时创建</strong>,不能后期修改/添加</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre>PUT /a
{
	"mappings": {
		"_doc": {
			"properties": {
				"content": {
					"type": "text",
					"analyzer": "ik_max_word",
					"search_analyzer": "ik_smart"
				}
			}
		}
	}
}
</pre></td></tr></tbody></table></code></pre></div></div>

<p>使用在线热更新接口有个问题:对于旧的的数据需要重新索引(reindex).所以妄想通过增加新词来对旧的数据进行分词,这种需求是无法实现的.</p>

<p>热更新的词语存在内存中,不会更新dic文件</p>

<h2 id="分片管理">分片管理</h2>

<p>默认模板设置</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre>POST _template/default
{
  "template": ["*"]
  "order": -1
  "settings": {
    "number_of_replicas": "0"
  }
}
</pre></td></tr></tbody></table></code></pre></div></div>

<ul>
  <li>自定义模板-设置副本数默认为0</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre>curl -XPUT 0.0.0.0:9200/_template/zeroreplicas  -H 'Content-Type: application/json' -d '
{
"template" : "*",
"settings" : {
"number_of_replicas" : 0
}
}'
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="ingestpipeline-用法">ingest/pipeline 用法</h2>

<p>ingest 是 elasticsearch 的节点角色。在ingest里面定义pipeline。</p>

<p>pipeline是预处理器。什么是预处理器呢，可以勉强理解为数据清洗，在入库前对数据进行处理。</p>

<p>比如下面这个pipeline的定义</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
</pre></td><td class="rouge-code"><pre>PUT _ingest/pipeline/monthlyindex
{
    "description" : "servicelog-test monthlyindex",
    "processors" : [
      {
        "date_index_name" : {
          "field" : "timestamp",
          "date_formats" : [
            "UNIX"
          ],
          "timezone" : "Asia/Shanghai",
          "index_name_prefix" : "servicelog-test_",
          "date_rounding" : "M"
        }
      },
      {
        "date" : {
          "field" : "timestamp",
          "formats" : [
            "UNIX"
          ],
          "timezone" : "Asia/Shanghai"
        }
      },
      {
        "remove" : {
          "field" : "timestamp"
        }
      },
      {
        "remove" : {
          "field" : "type"
        }
      }
    ]
}
</pre></td></tr></tbody></table></code></pre></div></div>

<p>意思是把写入”servicelog-test” index 的数据按月分片处理。</p>

<p>原始写入”servicelog-test”的请求，最终最写入到 <code class="highlighter-rouge">servicelog-test_2020-02-01</code>(当前月份的自动分片)</p>

<p>这个 <code class="highlighter-rouge">pipeline</code> 解决了我们写入单一elasticsearch index 的问题。以后再也不需要 delete by query 了，直接删过往的index，这也是elasticsearch推荐的方式。</p>

<p>参考链接：<a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/date-index-name-processor.html">Date Index Name Processor</a></p>

<h2 id="付费功能_xpack">付费功能(_xpack)</h2>

<p>es默认没有密码,需要用户授权功能的话买商业版的许可.</p>

<ul>
  <li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-users.html">security-api-users</a></li>
</ul>

<p>GET /_xpack/security/user</p>

<h2 id="70废弃的查询">7.0废弃的查询</h2>

<p>As of version 7.0 Elasticsearch will require that a [field] parameter is provided when a [seed] is set</p>

<p>改为</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre> "random_score": {
                "seed": 10,
                "field": "_seq_no"
            }
</pre></td></tr></tbody></table></code></pre></div></div>
<p>Deprecation: Deprecated field [inline] used, expected [source] instead</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre>		"_script": {
			"script": {
				"inline": "doc['xxx'].value&gt;0?1:0"
			},
</pre></td></tr></tbody></table></code></pre></div></div>
<p>inline</p>

<h2 id="参考链接">参考链接:</h2>

<ol>
  <li><a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/getting-started.html">基础入门</a></li>
  <li><a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/_Document_Metadata.html">文档元数据</a></li>
  <li><a href="https://blog.csdn.net/qingmoruoxi/article/details/77221602">es 的常用查询语法</a></li>
</ol>
:ET